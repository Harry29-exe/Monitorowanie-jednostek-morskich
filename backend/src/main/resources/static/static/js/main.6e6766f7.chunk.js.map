{
  "version": 3,
  "sources": [
    "logic/dto/ShipMarkerDTO.ts",
    "logic/dto/Area.ts",
    "logic/map-related/CreateMarker.ts",
    "components/ShipMarker.tsx",
    "components/ShipMap.tsx",
    "logic/map-related/ShipMarkerReducer.ts",
    "config/BackendAddress.ts",
    "components/ShipModule.tsx",
    "logic/fetchers/ShipFetcher.ts",
    "components/user-module/RegisterModal.tsx",
    "logic/fetchers/Register.ts",
    "components/user-module/LoginModal.tsx",
    "logic/fetchers/Login.ts",
    "logic/dto/ships/CurrentShipInfo.ts",
    "logic/contexts/AuthContext.ts",
    "logic/fetchers/FetchShipHistory.ts",
    "components/user-module/ShipInfoModal.tsx",
    "components/user-module/ShipExplorerRow.tsx",
    "logic/fetchers/DeleteShip.ts",
    "components/user-module/ShipNewTrackInput.tsx",
    "components/user-module/UserModuleWrapper.tsx",
    "logic/fetchers/TrackNewShip.tsx",
    "components/user-module/ShipExplorer.tsx",
    "logic/dto/ships/ShipData.ts",
    "logic/fetchers/TrackedShips.ts",
    "App.tsx",
    "reportWebVitals.ts",
    "serviceWorker.ts",
    "index.tsx"
  ],
  "names": [
    "ShipMarkerDTO",
    "ships",
    "x",
    "y",
    "this",
    "str",
    "i",
    "ship",
    "concat",
    "name",
    "mmsi",
    "Area",
    "fromX",
    "fromY",
    "toX",
    "toY",
    "Math",
    "min",
    "max",
    "createMarker",
    "shipsCount",
    "size",
    "el",
    "document",
    "createElement",
    "style",
    "ShipMarker",
    "props",
    "m",
    "marker",
    "Marker",
    "position",
    "icon",
    "DivIcon",
    "html",
    "length",
    "iconSize",
    "Popup",
    "maxH",
    "overflowY",
    "fontSize",
    "w",
    "borderBottom",
    "map",
    "s",
    "ShipMap",
    "useState",
    "setMap",
    "markers",
    "setMarkers",
    "mapW",
    "setMapW",
    "mapH",
    "useEffect",
    "updateMarkers",
    "zoom",
    "getZoom",
    "bounds",
    "getBounds",
    "topLeft",
    "getNorthWest",
    "bottomRight",
    "getSouthEast",
    "area",
    "lng",
    "lat",
    "widthMul",
    "abs",
    "heightMul",
    "minX",
    "maxX",
    "minY",
    "maxY",
    "shipMarkers",
    "currentLocation",
    "push",
    "shipMarkerReducerSmallDistance",
    "boundingBox",
    "maxXDiff",
    "maxYDiff",
    "closeMarker",
    "filter",
    "shipMarkerReducer",
    "addEventListener",
    "removeEventListener",
    "zIndex",
    "h",
    "p",
    "MapContainer",
    "center",
    "scrollWheelZoom",
    "height",
    "width",
    "whenCreated",
    "TileLayer",
    "attribution",
    "url",
    "traces",
    "t",
    "Polyline",
    "pathOptions",
    "color",
    "positions",
    "location",
    "toMarkerString",
    "pos",
    "bottom",
    "right",
    "minW",
    "minH",
    "borderTopLeftRadius",
    "bg",
    "onChange",
    "value",
    "num",
    "console",
    "log",
    "onClick",
    "BACKEND_ADDRESS",
    "ShipModule",
    "shipContext",
    "updateShips",
    "fetch",
    "then",
    "response",
    "json",
    "responseBody",
    "RegisterModal",
    "useDisclosure",
    "isOpen",
    "onOpen",
    "onClose",
    "username",
    "setUsername",
    "password",
    "setPassword",
    "useBoolean",
    "registered",
    "setRegistered",
    "lastLoginFailed",
    "setFailed",
    "status",
    "py",
    "spacing",
    "placeholder",
    "e",
    "target",
    "type",
    "body",
    "JSON",
    "stringify",
    "headers",
    "method",
    "catch",
    "register",
    "on",
    "LoginModal",
    "authToken",
    "get",
    "login",
    "undefined",
    "onLogin",
    "CurrentShipInfo",
    "destination",
    "shipDTO",
    "shipType",
    "lastLocation",
    "AuthContext",
    "React",
    "createContext",
    "fetchShipHistory",
    "auth",
    "id",
    "State",
    "ShipInfoModal",
    "shipHistory",
    "setShipHistory",
    "authContext",
    "useContext",
    "shipExplorerCtx",
    "ShipExplorerContext",
    "flexGrow",
    "stillTracked",
    "justifyContent",
    "shipId",
    "publicId",
    "success",
    "initShipFetch",
    "shipWithHistory",
    "history",
    "l",
    "time",
    "ShipExplorerRow",
    "NOT_VISIBLE",
    "state",
    "setState",
    "alignSelf",
    "borderColor",
    "alignItems",
    "label",
    "VISIBLE",
    "CHANGING",
    "hide",
    "OperationStatus",
    "OK",
    "show",
    "ShipNewTrackInput",
    "authCtx",
    "lastAddSuccess",
    "updateLastAdd",
    "setMmsi",
    "pb",
    "borderRadius",
    "toggle",
    "top",
    "px",
    "trackNewShip",
    "Number",
    "parseInt",
    "initShipsFetch",
    "ShipExplorer",
    "enabled",
    "setEnabled",
    "useBreakpointValue",
    "Provider",
    "shadow",
    "left",
    "transition",
    "_hover",
    "cursor",
    "ShipData",
    "visible",
    "displayHistory",
    "isUnderModifications",
    "UserModuleWrapper",
    "shipsData",
    "shipsFetchInit",
    "fetchShips",
    "updateShipsData",
    "reason",
    "f",
    "Promise",
    "resolve",
    "FAIL",
    "getShip",
    "from",
    "updateAuth",
    "theme",
    "extendTheme",
    "config",
    "initialColorMode",
    "useSystemColorMode",
    "App",
    "page",
    "setPage",
    "setAuth",
    "textAlign",
    "reportWebVitals",
    "onPerfEntry",
    "Function",
    "getCLS",
    "getFID",
    "getFCP",
    "getLCP",
    "getTTFB",
    "Boolean",
    "window",
    "hostname",
    "match",
    "ReactDOM",
    "render",
    "getElementById",
    "navigator",
    "serviceWorker",
    "ready",
    "registration",
    "unregister",
    "error",
    "message"
  ],
  "mappings": "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",
  "file": "static/js/main.6e6766f7.chunk.js",
  "sourcesContent": [
    "import {ShipIdDTO} from \"./ships/ShipIdDTO\";\n\nexport class ShipMarkerDTO {\n  public ships: ShipIdDTO[];\n  public x: number;\n  public y: number;\n\n  constructor(ships: ShipIdDTO[], x: number, y: number) {\n    this.ships = ships;\n    this.x = x;\n    this.y = y;\n  }\n\n  public toMarkerString(): string {\n    let str = \"\";\n    let i = 0\n    for(let ship of this.ships) {\n      str = str.concat(`(${ship.name}, ${ship.mmsi})`);\n      i++;\n      if(i > 5) {\n        str = str.concat(\"...and more\")\n        break;\n      }\n    }\n    return str;\n  }\n\n}",
    "export class Area {\n  public fromX: number;\n  public fromY: number;\n  public toX: number;\n  public toY: number;\n\n\n  constructor(fromX: number, fromY: number, toX: number, toY: number) {\n    this.fromX = fromX;\n    this.fromY = fromY;\n    this.toX = toX;\n    this.toY = toY;\n  }\n\n  // public inBounds(x: number, y: number): boolean {\n  //\n  // }\n\n  get minX(): number {\n    return Math.min(this.fromX, this.toX);\n  }\n\n  get maxX(): number {\n    return Math.max(this.fromX, this.toX);\n  }\n\n  get minY(): number {\n    return Math.min(this.fromY, this.toY);\n  }\n\n  get maxY(): number {\n    return Math.max(this.fromY, this.toY);\n  }\n\n}",
    "export function createMarker(shipsCount: number): HTMLElement {\n  let size = shipsCount === 1 ? 10 : shipsCount > 20 ? 16 : shipsCount > 5 ? 14 : 12;\n  let el = document.createElement(\"div\") as HTMLDivElement;\n  el.style[\"borderRadius\"] = \"100%\";\n  el.style[\"marginLeft\"] = `${-size / 2}px`;\n  el.style[\"marginTop\"] = `${-size / 2}px`;\n  el.style[\"width\"] = `${size}px`;\n  el.style[\"height\"] = `${size}px`;\n  el.style[\"background\"] = shipsCount === 1 ? \"blue\" :\n    shipsCount > 20 ? \"rgb(115, 50, 168, 0.6)\" :\n      shipsCount > 5 ? \"rgb(201, 209, 48, 0.8)\" : \"rgb(48, 209, 61, 0.95)\";\n  el.style[\"border\"] = \"1px solid black\"\n\n  return el;\n}",
    "import React from 'react';\nimport {DivIcon} from \"leaflet\";\nimport {createMarker} from \"../logic/map-related/CreateMarker\";\nimport {Marker, Popup} from \"react-leaflet\";\nimport {Box, VStack} from \"@chakra-ui/react\";\nimport {ShipMarkerDTO} from \"../logic/dto/ShipMarkerDTO\";\n\nconst ShipMarker = (props: {marker: ShipMarkerDTO}) => {\n  const m = props.marker;\n  return (\n    <Marker position={[m.y, m.x]}\n            icon={new DivIcon({html: createMarker(m.ships.length), iconSize: [0,0]})}\n    >\n      <Popup>\n        <VStack maxH={\"100px\"} overflowY={\"auto\"}>\n          <Box fontSize={\"14px\"}>Ships in region:</Box>\n          <Box w=\"100%\" borderBottom={\"2px solid black\"}/>\n          {m.ships.map(s => (\n            <div key={s.mmsi}>\n              <Box>{s.name}</Box>\n              <Box>{s.mmsi}</Box>\n              <Box w=\"100%\" borderBottom={\"2px solid black\"}/>\n            </div>\n          ))\n          }\n        </VStack>\n      </Popup>\n    </Marker>\n  );\n};\n\nexport default ShipMarker;",
    "import React, {useEffect, useRef, useState} from 'react';\nimport {DivIcon, Map as LeafletMap} from \"leaflet\";\nimport {MapContainer, Marker, Polyline, Popup, TileLayer} from 'react-leaflet';\nimport {Box, Button, Center, HStack, NumberInput, NumberInputField, useBoolean, VStack} from '@chakra-ui/react';\nimport {CurrentShipInfo} from \"../logic/dto/ships/CurrentShipInfo\";\nimport {shipMarkerReducer, shipMarkerReducerSmallDistance} from \"../logic/map-related/ShipMarkerReducer\";\nimport {Area} from \"../logic/dto/Area\";\nimport {ShipMarkerDTO} from \"../logic/dto/ShipMarkerDTO\";\nimport ShipMarker from './ShipMarker';\nimport {LocationDTO} from \"../logic/dto/LocationDTO\";\n\ninterface Coords {\n  x: number;\n  y: number;\n}\n\nconst ShipMap = (props: {ships: CurrentShipInfo[], traces: LocationDTO[][]}) => {\n  const [map, setMap] = useState<LeafletMap>();\n  const [markers, setMarkers] = useState<ShipMarkerDTO[]>([]);\n  const [mapW, setMapW] = useState<number>(1200);\n  const [mapH, setMapH] = useState<number>(600);\n\n  useEffect(() => {\n    if(!map) return;\n    const updateMarkers = () => {\n      let zoom = map.getZoom();\n      let bounds = map.getBounds();\n      let topLeft = bounds.getNorthWest();\n      let bottomRight = bounds.getSouthEast();\n      let area = new Area(topLeft.lng, topLeft.lat, bottomRight.lng, bottomRight.lat);\n\n      if(zoom >= 10) {\n        setMarkers(shipMarkerReducerSmallDistance(props.ships, area))\n      } else {\n        setMarkers(shipMarkerReducer(props.ships, area));\n      }\n    }\n    map.addEventListener(\"zoomend\", updateMarkers);\n    return () => {\n      if(!map) return;\n      map.removeEventListener(\"zoomend\", updateMarkers);\n    }\n  }, [map, props.ships]);\n\n  return (\n    <Center zIndex={1} w=\"100%\" h=\"100%\" p={10}>\n      <Box h={mapH + \"px\"} w={mapW + \"px\"}>\n        <MapContainer\n          center={[59.9138, 10.7522]} zoom={10}\n          scrollWheelZoom={true} style={{height: \"100%\", width: \"100%\"}}\n                      // style={{height: `${mapH}px`, width: `${mapW}px`}}\n          whenCreated={map => setMap(map)}\n        >\n\n          <TileLayer\n            attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          />\n\n          {!!props.traces && props.traces.length > 0 &&\n            props.traces.map(t => (\n              <Polyline pathOptions={{color: \"blue\"}} positions={t.map(location => [location.y, location.x])}/>\n            ))\n          }\n\n          {markers.map(m => (\n            <ShipMarker marker={m} key={m.toMarkerString()}/>\n          ))}\n\n\n        </MapContainer>\n      </Box>\n\n\n\n      <VStack pos=\"absolute\" bottom={0} right={0} minW={\"300px\"} minH={\"100px\"} borderTopLeftRadius={\"md\"} bg={\"teal.600\"} p={4}>\n        <HStack>\n          <Box>Map width</Box>\n          <NumberInput onChange={(value:string, num: number) => {\n            console.log(value)\n            setMapW(num)\n          }}>\n            <NumberInputField />\n          </NumberInput>\n        </HStack>\n\n        <Button onClick={() => {}}>Change map size</Button>\n      </VStack>\n    </Center>\n\n    );\n};\n\nexport default ShipMap;",
    "import {CurrentShipInfo} from \"../dto/ships/CurrentShipInfo\";\nimport {Area} from \"../dto/Area\";\nimport {ShipMarkerDTO} from \"../dto/ShipMarkerDTO\";\n\nexport function shipMarkerReducer(\n    ships: CurrentShipInfo[],\n    boundingBox: Area): ShipMarkerDTO[] {\n    let maxXDiff = Math.abs(Math.abs(boundingBox.fromX) - Math.abs(boundingBox.toX)) / 20;\n    let maxYDiff = Math.abs(Math.abs(boundingBox.fromY) - Math.abs(boundingBox.toY)) / 20;\n    let shipMarkers: ShipMarkerDTO[] = [];\n    for(let ship of ships) {\n        let closeMarker = shipMarkers.filter(m =>\n            Math.abs(Math.abs(m.x) - Math.abs(ship.currentLocation.x)) <= maxXDiff &&\n            Math.abs(Math.abs(m.y) - Math.abs(ship.currentLocation.y)) <= maxYDiff);\n        if(closeMarker.length > 0) {\n            closeMarker[0].ships.push(ship);\n        } else {\n            shipMarkers.push(new ShipMarkerDTO([ship], ship.currentLocation.x, ship.currentLocation.y));\n        }\n    }\n\n    \n    return shipMarkers;\n}\n\nexport function shipMarkerReducerSmallDistance(\n  ships: CurrentShipInfo[],\n  area: Area): ShipMarkerDTO[] {\n    // debugger;\n    const width = Math.abs(Math.abs(area.fromX) - Math.abs(area.toX));\n    const height = Math.abs(Math.abs(area.fromY) - Math.abs(area.toY));\n    const widthMul = width * 10;\n    const heightMul = height * 10;\n    let minX = area.minX < 0? area.minX + widthMul: area.minX - widthMul;\n    let maxX = area.maxX < 0? area.maxX - widthMul: area.maxX + widthMul;\n    let minY = area.minY < 0? area.minY + heightMul: area.minY - heightMul;\n    let maxY = area.maxY < 0? area.maxY - heightMul: area.maxY + heightMul;\n\n    let shipMarkers: ShipMarkerDTO[] = [];\n    for(let ship of ships) {\n        if(ship.currentLocation.x > minX && ship.currentLocation.x < maxX &&\n            ship.currentLocation.y > minY && ship.currentLocation.y < maxY) {\n            shipMarkers.push(new ShipMarkerDTO([ship], ship.currentLocation.x, ship.currentLocation.y));\n        }\n    }\n\n\n    return shipMarkers;\n}\n",
    "const BACKEND_ADDRESS = \"http://localhost:8080\";\n\nexport default BACKEND_ADDRESS;",
    "import React, {useEffect, useState } from 'react';\nimport ShipMap from \"./ShipMap\";\nimport fetchAllShips from \"../logic/fetchers/ShipFetcher\";\nimport {CurrentShipInfo} from \"../logic/dto/ships/CurrentShipInfo\";\n\nconst ShipModule = () => {\n  const [shipContext, updateShips] = useState<CurrentShipInfo[]>([]);\n\n  useEffect(() => {\n    fetchAllShips().then(responseBody => {\n      updateShips(responseBody);\n    })\n  }, []);\n\n  return (\n    <ShipMap ships={shipContext} traces={[]}/>\n  );\n};\n\nexport default ShipModule;\n",
    "import BACKEND_ADDRESS from \"../../config/BackendAddress\";\nimport {CurrentShipInfo} from \"../dto/ships/CurrentShipInfo\";\n\nexport default function fetchAllShips (): Promise<CurrentShipInfo[]> {\n  return fetch(`${BACKEND_ADDRESS}/ships/all`)\n    .then(response => response.json())\n}\n\n",
    "import React, {useState} from 'react';\nimport {\n  Alert,\n  Button, Center, CloseButton, Input,\n  Modal,\n  ModalBody, ModalCloseButton,\n  ModalContent, ModalFooter,\n  ModalHeader,\n  ModalOverlay, useBoolean,\n  useDisclosure,\n  VStack\n} from \"@chakra-ui/react\";\nimport login from \"../../logic/fetchers/Login\";\nimport register from '../../logic/fetchers/Register';\n\nconst RegisterModal = () => {\n  const {isOpen, onOpen, onClose} = useDisclosure();\n  const [username, setUsername] = useState<string>(\"\");\n  const [password, setPassword] = useState<string>(\"\");\n  const [registered, setRegistered] = useBoolean(false);\n  const [lastLoginFailed, setFailed] = useBoolean(false);\n\n\n  const onRegisterButton = () => {\n    register(username, password).then(status => {\n      if(status < 300 && status >=200) {\n        setRegistered.on();\n      } else {\n        setFailed.on();\n      }\n    })\n  }\n\n  return (\n    <>\n      <Button onClick={onOpen}>Register</Button>\n      <Modal isOpen={isOpen} onClose={onClose}>\n        <ModalOverlay/>\n        <ModalContent>\n          {!registered ?\n            <>\n              <ModalCloseButton onClick={onClose}/>\n              <ModalHeader><Center>Register</Center></ModalHeader>\n              <ModalBody>\n                <VStack py={3} spacing={6}>\n                  <Input placeholder={\"Enter username\"} onChange={(e: any) => setUsername(e.target.value)}/>\n                  <Input type='password' placeholder=\"Enter password\" onChange={(e: any) => setPassword(e.target.value)}/>\n                  {lastLoginFailed &&\n                    <Alert status='error'>We could not register your account try with different username/password</Alert>\n                  }\n                </VStack>\n              </ModalBody>\n              <ModalFooter>\n                <Button onClick={onRegisterButton} size=\"md\">Register</Button>\n              </ModalFooter>\n            </>\n            :\n            <>\n              <Alert status='success'>You have been successfully registered</Alert>\n              <Button onClick={onClose}>Take me to login</Button>\n            </>\n          }\n        </ModalContent>\n      </Modal>\n    </>\n  );\n};\n\nexport default RegisterModal;",
    "import BACKEND_ADDRESS from \"../../config/BackendAddress\";\n\nexport default function register(username: string, password: string): Promise<number> {\n  return fetch(`${BACKEND_ADDRESS}/register`, {\n      body: JSON.stringify({username: username, password: password}),\n      headers: {\"Content-Type\": \"application/json\"},\n      method: \"post\"\n    }).then(response => response.status)\n      .catch(() => 400);\n}",
    "import {\n  Alert,\n  Button, Center, CloseButton, HStack,\n  Input,\n  Modal,\n  ModalBody, ModalCloseButton,\n  ModalContent, ModalFooter,\n  ModalHeader,\n  ModalOverlay, useBoolean,\n  useDisclosure, VStack\n} from '@chakra-ui/react';\nimport React, {useState} from 'react';\nimport login from \"../../logic/fetchers/Login\";\nimport {Authentication} from \"./UserModuleWrapper\";\nimport RegisterModal from \"./RegisterModal\";\n\nconst LoginModal = (props: {onLogin: (auth: Authentication) => any}) => {\n  const {isOpen, onOpen, onClose} = useDisclosure();\n  const [username, setUsername] = useState<string>(\"\");\n  const [password, setPassword] = useState<string>(\"\");\n  const [lastLoginFailed, setFailed] = useBoolean(false);\n\n  const onLoginButton = () => {\n    login(username, password).then(response => {\n      if(response.status < 300 && response.status >=200 && response.username !== undefined && response.authToken !== undefined) {\n        onClose();\n        props.onLogin({username: response.username, authToken: response.authToken});\n      } else {\n        setFailed.on();\n      }\n    })\n  }\n\n  return (\n    <>\n      <Button onClick={onOpen} size={'lg'} bg={\"teal.600\"}>Login</Button>\n      <Modal isOpen={isOpen} onClose={onClose}>\n        <ModalOverlay/>\n        <ModalContent>\n          <ModalCloseButton onClick={onClose}/>\n          <ModalHeader><Center>Login</Center></ModalHeader>\n          <ModalBody>\n            <VStack py={3} spacing={6}>\n              <Input placeholder={\"Enter username\"} onChange={(e: any) => setUsername(e.target.value)}/>\n              <Input type='password' placeholder=\"Enter password\" onChange={(e: any) => setPassword(e.target.value)}/>\n              {lastLoginFailed &&\n                <Alert status='error'>We could not log you, check you username and password</Alert>\n              }\n            </VStack>\n          </ModalBody>\n          <ModalFooter>\n            <HStack>\n              <RegisterModal/>\n              <Button size=\"md\" onClick={onLoginButton}>Login</Button>\n            </HStack>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n    </>\n  );\n};\n\nexport default LoginModal;",
    "import BACKEND_ADDRESS from \"../../config/BackendAddress\";\n\nexport interface LoginResponse {\n  status: number;\n  username?: string;\n  authToken?: string;\n}\n\nexport default function login(username: string, password: string): Promise<LoginResponse> {\n  console.log(username, password);\n  return fetch(`${BACKEND_ADDRESS}/login`, {\n    body: JSON.stringify({username: username, password: password}),\n    headers: {\"Content-Type\": \"application/json\"},\n    method: \"post\"\n  })\n    .then(response => {\n      if(response.status <=200 && response.status <300)\n        return {status: response.status, username: username, authToken: response.headers.get(\"Authorization\")} as LoginResponse\n      else\n        return {status: response.status}\n    })\n    .catch(() => {\n      return {status: 400}\n    })\n}",
    "import {LocationDTO} from \"../LocationDTO\";\nimport {ShipIdDTO} from \"./ShipIdDTO\";\nimport {ShipDTO} from \"./ShipDTO\";\nimport {ShipWithLocation} from \"./ShipWithLocation\";\n\nexport class CurrentShipInfo implements ShipIdDTO {\n  public type: string;\n  public destination?: string;\n  public currentLocation: LocationDTO;\n  public mmsi: number;\n  public name: string;\n\n\n  constructor(type: string, currentLocation: LocationDTO, mmsi: number, name: string,  destination?: string) {\n    this.type = type;\n    this.destination = destination;\n    this.currentLocation = currentLocation;\n    this.mmsi = mmsi;\n    this.name = name;\n  }\n\n  public static from(ship: ShipWithLocation): CurrentShipInfo {\n    let s = ship.shipDTO;\n    return new CurrentShipInfo(s.shipType, ship.lastLocation, s.mmsi, s.name, undefined);\n  }\n\n}",
    "import {Authentication} from \"../../components/user-module/UserModuleWrapper\";\nimport React from \"react\";\n\nexport interface AuthContextHolder {\n  auth?: Authentication;\n  updateAuth: (auth: Authentication) => any;\n}\n\nexport const AuthContext = React.createContext<AuthContextHolder>({} as AuthContextHolder)",
    "import {ShipWithHistory} from \"../dto/ships/ShipWithHistory\";\nimport BACKEND_ADDRESS from \"../../config/BackendAddress\";\n\nexport default function fetchShipHistory(auth: string, id: number) :Promise<ShipWithHistory> {\n  return fetch(`${BACKEND_ADDRESS}/ships/history/${id}`, {\n    headers: {\"Authorization\": auth},\n    method: \"post\"\n  }).then(response => response.json());\n}",
    "import { QuestionIcon } from '@chakra-ui/icons';\nimport {\n  Box,\n  Button, Divider, HStack,\n  IconButton,\n  Modal,\n  ModalBody, ModalCloseButton,\n  ModalContent,\n  ModalHeader,\n  ModalOverlay,\n  useDisclosure,\n  VStack\n} from '@chakra-ui/react';\nimport React, {useContext, useState} from 'react';\nimport {ShipDTO} from \"../../logic/dto/ships/ShipDTO\";\nimport {LocationDTO} from \"../../logic/dto/LocationDTO\";\nimport {AuthContext} from \"../../logic/contexts/AuthContext\";\nimport deleteShip from \"../../logic/fetchers/DeleteShip\";\nimport fetchShipHistory from \"../../logic/fetchers/FetchShipHistory\";\nimport {ShipExplorerContext} from \"./ShipExplorer\";\n\nconst ShipInfoModal = (props: {ship: ShipDTO}) => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const [shipHistory, setShipHistory] = useState<LocationDTO[]>();\n  const authContext = useContext(AuthContext);\n  const shipExplorerCtx = useContext(ShipExplorerContext);\n\n  const ship = props.ship;\n\n  return (\n    <>\n      <IconButton icon={<QuestionIcon/>} aria-label=\"show details\" bg={\"teal.700\"} onClick={onOpen}>Open Modal</IconButton>\n\n      <Modal isOpen={isOpen} onClose={onClose} size=\"2xl\">\n        <ModalOverlay/>\n        <ModalContent bg=\"teal.700\">\n          <ModalHeader>{ship.name}<ModalCloseButton/></ModalHeader>\n          <ModalBody>\n\n            <VStack w=\"100%\">\n              <HStack w=\"100%\">\n                <Box flexGrow={4}>Name:</Box>\n                <Box flexGrow={0}>{ship.name}</Box>\n              </HStack>\n              <HStack w=\"100%\">\n                <Box flexGrow={4}>MMSI:</Box>\n                <Box flexGrow={0}>{ship.mmsi}</Box>\n              </HStack>\n              <HStack w=\"100%\">\n                <Box flexGrow={4}>Ship type:</Box>\n                <Box flexGrow={0}>{ship.shipType}</Box>\n              </HStack>\n              <HStack w=\"100%\">\n                <Box flexGrow={4}>Is still tracked:</Box>\n                <Box flexGrow={0}>{ship.stillTracked}</Box>\n              </HStack>\n\n              <HStack py={4} w=\"100%\" justifyContent=\"flex-end\">\n                {/*<Button onClick={() => {*/}\n                {/*  if(!authContext.auth) return;*/}\n                {/*  stopTrackingShip(authContext.auth.authToken, props.ship.publicId)*/}\n                {/*}}>Stop tracking</Button>*/}\n                <Button onClick={() => {\n                  if(!authContext.auth) return;\n                  deleteShip(authContext.auth.authToken, props.ship.publicId)\n                    .then(success => {\n                      if(success) {\n                        onClose();\n                        shipExplorerCtx.initShipFetch();\n                      }\n                    })\n                }}>Delete</Button>\n              </HStack>\n\n              <Divider/>\n\n              <Button onClick={() => {\n                if(!authContext.auth) return;\n                fetchShipHistory(authContext.auth.authToken, props.ship.publicId)\n                  .then(shipWithHistory => setShipHistory(shipWithHistory.history));\n              }}>\n                Show history\n              </Button>\n              {shipHistory &&\n                <VStack>\n                  {\n                    shipHistory.map(l => (\n                      <HStack w=\"100%\">\n                        <Box w=\"25%\">X: {l.x}</Box>\n                        <Box w=\"25%\">Y: {l.y}</Box>\n                        <Box w=\"50%\">Date: {l.time}</Box>\n                      </HStack>\n                    ))\n                  }\n                </VStack>\n              }\n\n            </VStack>\n\n          </ModalBody>\n        </ModalContent>\n      </Modal>\n    </>\n  );\n};\n\nexport default ShipInfoModal;",
    "import React, {useState} from 'react';\nimport {HStack, IconButton, Tooltip, VStack} from \"@chakra-ui/react\";\nimport {MinusIcon, SpinnerIcon, ViewIcon, ViewOffIcon} from \"@chakra-ui/icons\";\nimport {ShipDTO} from \"../../logic/dto/ships/ShipDTO\";\nimport {OperationStatus} from \"./UserModuleWrapper\";\nimport ShipInfoModal from \"./ShipInfoModal\";\n\nenum State {\n  VISIBLE,\n  NOT_VISIBLE,\n  CHANGING\n}\n\nconst ShipExplorerRow = (props: {\n  ship: ShipDTO,\n  show: (id: string) => Promise<OperationStatus>,\n  hide: (id: string) => Promise<OperationStatus>\n}) => {\n  const [state, setState] = useState<State>(State.NOT_VISIBLE);\n  const ship = props.ship;\n\n  const onVisibilityChange = () => {\n    setState(State.CHANGING);\n    if(state === State.VISIBLE) {\n      props.hide(ship.publicId).then(status => setState(\n          status === OperationStatus.OK ? State.NOT_VISIBLE : State.VISIBLE))\n\n    } else if(state === State.NOT_VISIBLE) {\n      props.show(ship.publicId).then(status => setState(\n        status === OperationStatus.OK? State.VISIBLE: State.NOT_VISIBLE\n      ));\n\n    } else {\n      return;\n    }\n  }\n\n\n  return (\n    <HStack spacing={10} alignSelf={\"flex-start\"} w={\"100%\"} py={4}\n            key={ship.publicId} borderBottom={\"2px solid\"} borderColor={\"rgb(255,255,255,0.3)\"}\n    >\n      <VStack  alignItems={\"flex-start\"} flexGrow={4}>\n        <span>Ship name: {ship.name}</span>\n        <span>Ship mmsi: {ship.mmsi}</span>\n      </VStack>\n\n      <HStack>\n        <Tooltip label=\"stop tracking\">\n          <ShipInfoModal ship={props.ship}/>\n        </Tooltip>\n\n        <Tooltip label=\"show history\">\n          <IconButton aria-label=\"\" bg={\"teal.700\"} icon={\n            state === State.NOT_VISIBLE? <ViewIcon/>:\n              state === State.VISIBLE? <ViewOffIcon/>:\n                <SpinnerIcon/>\n          }\n              onClick={onVisibilityChange}\n          />\n        </Tooltip>\n\n      </HStack>\n    </HStack>\n  );\n};\n\nexport default ShipExplorerRow;",
    "import BACKEND_ADDRESS from \"../../config/BackendAddress\";\n\nexport default function deleteShip(auth: string, shipId: string): Promise<boolean> {\n  return fetch(`${BACKEND_ADDRESS}/ships/${shipId}`, {\n    method: \"delete\",\n    headers: {\"Authorization\": auth}\n  }).then(response => response.status < 300 && response.status >= 200);\n}",
    "import React, {useContext, useState} from 'react';\nimport {Alert, AlertIcon, Button, CloseButton, Input, useBoolean, VStack} from \"@chakra-ui/react\";\nimport {SmallAddIcon} from \"@chakra-ui/icons\";\nimport {AuthContext} from \"../../logic/contexts/AuthContext\";\nimport trackNewShip from \"../../logic/fetchers/TrackNewShip\";\n\nconst ShipNewTrackInput = (props: {initShipsFetch: () => any}) => {\n  const authCtx = useContext(AuthContext);\n  const [lastAddSuccess, updateLastAdd] = useBoolean(false);\n  const [mmsi, setMmsi] = useState<string>(\"\");\n\n  return (\n    <VStack w={\"100%\"} borderBottom={\"2px solid\"} borderColor={\"rgb(255,255,255,0.3)\"} pb={5}>\n      <Input placeholder=\"enter ship mmsi\" onChange={(e: any) => setMmsi(e.target.value)}/>\n\n      {lastAddSuccess &&\n      <Alert status={\"success\"} borderRadius=\"md\" bg={\"green.500\"}>\n          <AlertIcon />\n          Successfully added new ship\n          <CloseButton onClick={updateLastAdd.toggle} position='absolute' right='8px' top='8px' />\n      </Alert>\n      }\n\n\n      <Button px={2} w={\"100%\"} bg={\"teal.700\"}\n              onClick={() => {\n                if (!authCtx.auth) return;\n                  trackNewShip(authCtx.auth.authToken, Number.parseInt(mmsi))\n                    .then(status => {\n                      if(status >= 200 && status < 300) {\n                        updateLastAdd.on();\n                        props.initShipsFetch();\n                      }\n                    })\n                }}>\n        Add ship to track\n        <SmallAddIcon fontSize={\"25px\"}/>\n      </Button>\n\n    </VStack>\n  );\n};\n\nexport default ShipNewTrackInput;",
    "import React, {useContext, useEffect, useState} from 'react';\nimport LoginModal from \"./LoginModal\";\nimport ShipMap from \"../ShipMap\";\nimport fetchTrackedShips from \"../../logic/fetchers/TrackedShips\";\nimport {CurrentShipInfo} from \"../../logic/dto/ships/CurrentShipInfo\";\nimport ShipExplorer from \"./ShipExplorer\";\nimport {Center, HStack, useBoolean} from \"@chakra-ui/react\";\nimport {ShipData} from \"../../logic/dto/ships/ShipData\";\nimport fetchShipHistory from \"../../logic/fetchers/FetchShipHistory\";\nimport {LocationDTO} from \"../../logic/dto/LocationDTO\";\nimport {AuthContext} from \"../../logic/contexts/AuthContext\";\n\nexport interface Authentication {\n  username: string;\n  authToken: string;\n}\n\nfunction getShip(id: string, shipsData: ShipData[]): ShipData | null {\n  let ships = shipsData.filter(f => f.shipDTO.publicId === id);\n  if(ships.length === 0) return null;\n  return ships[0];\n}\n\nexport enum OperationStatus {\n  OK,\n  FAIL\n}\n\nconst UserModuleWrapper = () => {\n  const [shipsData, updateShips] = useState<ShipData[]>([]);\n  const [shipsFetchInit, fetchShips] = useBoolean(false);\n  const authContext = useContext(AuthContext);\n  const auth = authContext.auth;\n\n  const updateShipsData = () => updateShips(shipsData.map(s => s))\n\n  const showShip = (shipId: string): Promise<OperationStatus> => {\n    let ships = shipsData.filter(f => f.shipDTO.publicId === shipId);\n    if(ships.length > 0) {\n      if (!!auth) {\n        return fetchShipHistory(auth.authToken, ships[0].shipDTO.publicId)\n          .then(history => {\n            ships[0].history = history.history;\n            ships[0].displayHistory = true;\n            updateShipsData();\n          }).then(() => OperationStatus.OK);\n      }\n      return Promise.resolve(OperationStatus.FAIL);\n    } else {\n      return Promise.resolve(OperationStatus.FAIL);\n    }\n  }\n\n  const hideShip = (shipId: string): Promise<OperationStatus> => {\n    let ship = getShip(shipId, shipsData);\n    if(!!ship) {\n      ship.displayHistory = false;\n      updateShipsData();\n      return Promise.resolve(OperationStatus.OK);\n    }\n    return Promise.resolve(OperationStatus.FAIL);\n  }\n\n  useEffect(() => {\n    if(!auth) return;\n    fetchTrackedShips(auth.authToken)\n      .then(body => {\n        if(!body) {\n          console.log(\"Body is broken\");\n          return;\n        }\n        updateShips(body.map(s => new ShipData(s.lastLocation, s.shipDTO)));\n      });\n  }, [auth, shipsFetchInit]);\n\n  let traces: LocationDTO[][] = shipsData\n    .filter(s => s.displayHistory && !!s.history)\n    .map(s => s.history) as LocationDTO[][];\n\n\n  return (\n    <HStack m={0} p={0} h=\"100%\" w=\"100%\" pos=\"relative\">\n      {!auth?\n        <Center w=\"100%\" h=\"100%\">\n          <LoginModal onLogin={authContext.updateAuth}/>\n        </Center>\n        :\n        <>\n          <ShipExplorer ships={shipsData.map(s => s.shipDTO)}\n                        show={showShip}\n                        hide={hideShip}\n                        initShipFetch={fetchShips.toggle}\n          />\n\n          <ShipMap ships={shipsData.map(s => CurrentShipInfo.from(s))}\n                   traces={traces? traces: []}/>\n\n        </>\n      }\n    </HStack>\n  );\n};\n\nexport default UserModuleWrapper;",
    "import BACKEND_ADDRESS from \"../../config/BackendAddress\";\n\nexport default function trackNewShip(auth: string, mmsi: number): Promise<number> {\n  return fetch(`${BACKEND_ADDRESS}/ships/tracking/${mmsi}`, {\n    method: \"post\",\n    headers: {\"Authorization\": auth}\n  }).then(response => response.status);\n}",
    "import React, {useState} from 'react';\nimport {\n  Box,\n  Button,\n  Center,\n  Divider,\n  HStack,\n  IconButton, Input,\n  Tooltip,\n  useBoolean,\n  useBreakpoint, useBreakpointValue,\n  VStack\n} from \"@chakra-ui/react\";\nimport {ShipDTO} from \"../../logic/dto/ships/ShipDTO\";\nimport {ArrowLeftIcon, ArrowRightIcon, MinusIcon, SmallAddIcon, SmallCloseIcon, ViewIcon} from \"@chakra-ui/icons\";\nimport ShipExplorerRow from \"./ShipExplorerRow\";\nimport {OperationStatus} from \"./UserModuleWrapper\";\nimport ShipNewTrackInput from \"./ShipNewTrackInput\";\n\nexport interface ShipExplorerContextHolder {\n  show: (id: string) => Promise<OperationStatus>,\n  hide: (id: string) => Promise<OperationStatus>,\n  initShipFetch: () => any\n}\n\nexport const ShipExplorerContext = React.createContext<ShipExplorerContextHolder>({} as ShipExplorerContextHolder);\n\nconst ShipExplorer = (props: {\n  ships: ShipDTO[],\n  show: (id: string) => Promise<OperationStatus>,\n  hide: (id: string) => Promise<OperationStatus>,\n  initShipFetch: () => any\n}) => {\n  const [enabled, setEnabled] = useBoolean(true);\n  const w = useBreakpointValue([250, 350, 400]);\n\n  return (\n    <ShipExplorerContext.Provider value={props}>\n      <HStack h=\"100%\"  spacing={0} pos=\"absolute\" top={0}\n              zIndex={5} shadow=\"0 0 10px 4px black\"\n              left={enabled? 0: `-${w}px`} transition={\"left 0.5s\"}>\n\n        <VStack bg={\"teal.600\"} px={4} h=\"100%\" py={6} w={`${w}px`}\n                pos={\"relative\"} minH=\"100%\" maxH=\"100%\" overflowY=\"auto\">\n\n          <ShipNewTrackInput initShipsFetch={props.initShipFetch}/>\n          {\n            props.ships.map(s => (\n              <ShipExplorerRow ship={s} show={props.show} hide={props.hide}/>\n            ))\n          }\n        </VStack>\n\n\n        <Center onClick={() => setEnabled.toggle()}\n                _hover={{cursor: \"pointer\"}} p={2} pb={40} fontSize=\"16px\"\n                w=\"30px\" h=\"100%\" bg={\"teal.700\"}>\n          {enabled?\n            <ArrowLeftIcon/>\n            :\n            <ArrowRightIcon/>\n          }\n        </Center>\n      </HStack>\n    </ShipExplorerContext.Provider>\n  );\n};\n\n\n\nexport default ShipExplorer;",
    "import {ShipWithLocation} from \"./ShipWithLocation\";\nimport {ShipDTO} from \"./ShipDTO\";\nimport {LocationDTO} from \"../LocationDTO\";\nimport BACKEND_ADDRESS from \"../../../config/BackendAddress\";\n\nexport class ShipData implements ShipWithLocation {\n  public lastLocation: LocationDTO;\n  public shipDTO: ShipDTO;\n  public visible: boolean = true;\n  public history?: LocationDTO[];\n  public displayHistory: boolean = false;\n  public isUnderModifications: boolean = false;\n\n  constructor(lastLocation: LocationDTO, shipDTO: ShipDTO) {\n    this.lastLocation = lastLocation;\n    this.shipDTO = shipDTO;\n  }\n\n  public fetchHistory(): Promise<void> {\n    let id = this.shipDTO.publicId;\n    return fetch(`${BACKEND_ADDRESS}/ships/history/${id}`)\n      .then(response => response.json())\n      .then(body => this.history = body);\n  }\n\n}",
    "import {ShipWithLocation} from \"../dto/ships/ShipWithLocation\";\nimport BACKEND_ADDRESS from \"../../config/BackendAddress\";\n\nexport default function fetchTrackedShips(authToken: string): Promise<ShipWithLocation[]> {\n  return fetch(`${BACKEND_ADDRESS}/ships/tracked-ships`, {\n    headers: {\"Authorization\": authToken}\n  }).then(response => response.json())\n    .catch(reason => console.log(reason));\n}",
    "import * as React from \"react\"\nimport {\n  ChakraProvider,\n  Center,\n  Box,\n  HStack,\n  Link, extendTheme,\n} from \"@chakra-ui/react\"\nimport ShipModule from \"./components/ShipModule\";\nimport { useState } from \"react\";\nimport UserModuleWrapper, {Authentication} from \"./components/user-module/UserModuleWrapper\";\nimport { AuthContext } from \"./logic/contexts/AuthContext\";\nimport \"./Scrolbar.css\"\n\nconst config = {\n  initialColorMode: 'dark',\n  useSystemColorMode: false,\n}\n\n// 3. extend the theme\nconst theme = extendTheme({ config })\n\nexport const App = () => {\n  const [page, setPage] = useState<\"main\" | \"my\">(\"main\")\n  const [auth, setAuth] = useState<Authentication>();\n\n  return (\n    <ChakraProvider theme={theme}>\n      <AuthContext.Provider value={{auth: auth, updateAuth: setAuth}}>\n      <HStack w=\"100vw\" h={\"70px\"} bg={\"teal.600\"} spacing={0} fontSize={\"28px\"} textAlign={\"center\"}\n              shadow={\"0px 0px 10px 2px black\"} pos={\"relative\"} zIndex={10}>\n        <Link bg={page === \"main\"? \"teal.700\" : \"teal.600\"} px={8}\n              h={\"100%\"} onClick={() => setPage(\"main\")}>\n          <Center h={\"100%\"}>Ship Monitoring</Center>\n        </Link>\n        <Link bg={page === \"my\"? \"teal.700\" : \"teal.600\"} px={8}\n              h={\"100%\"} onClick={() => setPage(\"my\")}>\n          <Center h={\"100%\"}>My tracked Ships</Center>\n        </Link>\n      </HStack>\n      <Center w=\"100vw\" h=\"calc(100vh - 70px)\">\n\n        {page === \"main\"?\n          <ShipModule/>\n        :\n          <UserModuleWrapper/>\n        }\n    </Center>\n      </AuthContext.Provider>\n  </ChakraProvider>\n)}\n",
    "import { ReportHandler } from \"web-vitals\"\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n",
    "// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n)\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void\n  onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://cra.link/PWA\",\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://cra.link/PWA.\",\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It is the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\")\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\")\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\",\n      )\n    })\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister()\n      })\n      .catch((error) => {\n        console.error(error.message)\n      })\n  }\n}\n",
    "import { ColorModeScript } from \"@chakra-ui/react\"\nimport * as React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport { App } from \"./App\"\nimport reportWebVitals from \"./reportWebVitals\"\nimport * as serviceWorker from \"./serviceWorker\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <ColorModeScript />\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorker.unregister()\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"
  ],
  "sourceRoot": ""
}